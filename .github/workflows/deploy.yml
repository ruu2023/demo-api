name: Deploy to Cloud Run

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Create Artifact Registry repository if not exists
        run: |
          REPO_EXISTS=$(gcloud artifacts repositories list \
            --location=${{ secrets.GCP_REGION }} \
            --filter="name:my-repo" \
            --format="value(name)" | wc -l)
        
          if [ $REPO_EXISTS -eq 0 ]; then
            echo "Creating Artifact Registry repository..."
            gcloud artifacts repositories create my-repo \
              --repository-format=docker \
              --location=${{ secrets.GCP_REGION }} \
              --description="Docker repo for demoapi"
          else
            echo "Artifact Registry repository already exists"
          fi

      - name: Create Cloud Build logs bucket if not exists
        run: |
          BUCKET_EXISTS=$(gcloud logging buckets list \
            --location=${{ secrets.GCP_REGION }} \
            --filter="name:cloudbuild-logs" \
            --format="value(name)" | wc -l)
          
          if [ $BUCKET_EXISTS -eq 0 ]; then
            echo "Creating Cloud Build logs bucket..."
            gcloud logging buckets create cloudbuild-logs \
              --location=${{ secrets.GCP_REGION }} \
              --description="Dedicated logs bucket for Cloud Build"
          else
            echo "Cloud Build logs bucket already exists"
          fi

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet

      - name: Build and push container
        run: |
          IMAGE=${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-repo/demoapi
          gcloud builds submit --tag $IMAGE

      - name: Deploy to Cloud Run
        run: |
          IMAGE=${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-repo/demoapi
          gcloud run deploy demoapi \
            --image $IMAGE \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated